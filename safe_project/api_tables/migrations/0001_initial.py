# Generated by Django 3.1.4 on 2021-05-28 18:54

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'Ya existe un usuario con este nombre de usuario.'}, max_length=64, unique=True, verbose_name='username')),
                ('first_name', models.CharField(max_length=64, verbose_name='first name')),
                ('last_name', models.CharField(max_length=64, verbose_name='last name')),
                ('email', models.EmailField(error_messages={'unique': 'Ya existe un usuario con este email.'}, max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', models.CharField(error_messages={'unique': 'Ya existe un usuario con este número de teléfono.'}, max_length=20, unique=True, verbose_name='phone number')),
                ('company_name', models.CharField(max_length=64, verbose_name='company name')),
                ('company_address', models.CharField(max_length=64, verbose_name='company adress')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Door',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac', models.CharField(max_length=64, unique=True, verbose_name='MAC')),
                ('sector_name', models.CharField(max_length=64, verbose_name='Sector Name')),
                ('door_name', models.CharField(max_length=64, verbose_name='Door Name')),
                ('is_opened', models.BooleanField(default=False, verbose_name='Is Opened')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=64, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=64, verbose_name='Last Name')),
                ('phone_number', models.CharField(max_length=20, unique=True, verbose_name='Phone Number')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('address', models.CharField(max_length=64, verbose_name='Address')),
                ('card_code', models.CharField(max_length=64, unique=True, verbose_name='Card Code')),
                ('worker_image', models.ImageField(upload_to='workers_images/', verbose_name='worker image')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_datetime', models.DateTimeField(auto_now_add=True, verbose_name='Entry DateTime')),
                ('exit_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Exit DateTime')),
                ('facemask', models.BooleanField(verbose_name='Facemask')),
                ('temperature', models.CharField(max_length=8, verbose_name='Temperature')),
                ('authorized', models.BooleanField(verbose_name='Authorized')),
                ('worker_image', models.ImageField(upload_to='logs_images/', verbose_name='worker image')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('door_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_tables.door')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('worker_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_tables.worker')),
            ],
        ),
    ]
